#+title: Hyprland config
#+author: suzu
#+property: header-args :tangle hyprland.conf
#+auto_tangle: t

* Table of contents :toc:
- [[#alisaes][Alisaes]]
  - [[#super-key][Super key]]
  - [[#emacs][Emacs]]
- [[#startup][Startup]]
  - [[#send-notification-on-reload][Send notification on reload]]
  - [[#ui][UI]]
  - [[#notifications][Notifications]]
  - [[#run-xwayland-apps-as-root][Run xwayland apps as root]]
  - [[#launch-assistant-daemon][Launch assistant daemon]]
  - [[#start-apps][Start apps]]
  - [[#idle-daemon][Idle daemon]]
  - [[#timer][Timer]]
- [[#monitor][Monitor]]
- [[#workspaces][Workspaces]]
- [[#input][Input]]
- [[#xwayland][Xwayland]]
- [[#general][General]]
- [[#decoration][Decoration]]
- [[#animations][Animations]]
- [[#dwindle][Dwindle]]
- [[#master][Master]]
- [[#gestures][Gestures]]
- [[#mouse][Mouse]]
- [[#debug][Debug]]
- [[#misc][Misc]]
- [[#window-rules][Window rules]]
- [[#layer-rules][Layer rules]]
- [[#binds][Binds]]
  - [[#quit-hypland][Quit hypland]]
  - [[#app-launchers][App launchers]]
  - [[#workspaces-1][Workspaces]]
  - [[#windows][Windows]]
  - [[#screenshot][Screenshot]]
  - [[#audio][Audio]]
  - [[#brightness][Brightness]]
  - [[#second-monitor][Second monitor]]
  - [[#timer-1][Timer]]

* Alisaes
** Super key
#+begin_src conf
$mainMod = SUPER
$mainShiftMod = SUPER SHIFT
#+end_src

** Emacs
#+begin_src conf
$emacsDaemon = emacs --daemon && notify-send "Emacs started"
$emacsClient = emacsclient --create-frame --alternate-editor=""
#+end_src

* Startup
** Send notification on reload
#+begin_src conf
exec = notify-send "Hyprland config reloaded"
#+end_src

** UI
*** GTK theme & cursor
#+begin_src conf
exec-once = hyprctl setcursor Catppuccin-Frappe-Flamingo-Cursors 24
exec-once = gsettings set org.gnome.desktop.interface cursor-theme 'Catppuccin-Frappe-Flamingo-Cursors'
#+end_src

*** Wallpaper
#+begin_src conf
exec-once = hyprpaper
#+end_src

*** Statusbar
#+begin_src conf
exec-once = eww daemon && eww open bar
#+end_src

** Notifications
#+begin_src conf
exec-once = $HOME/.config/bin/notification-daemon
exec-once = batsignal # Notifies when battery is low
#+end_src

** Run xwayland apps as root
It's needed for apps like gnome-disk-utility

#+begin_src conf
exec-once = xhost +SI:localuser:root
#+end_src

** Launch assistant daemon
It's my personal app that adds essential features:
- Each workspace has own state of choosed keybaord layout

#+begin_src conf
exec-once = hyprsistant
#+end_src

** Start apps
#+begin_src conf
exec-once = hyprctl dispatch workspace 2
exec-once = [workspace 1 silent] librewolf
exec-once = [workspace 2 silent] $emacsDaemon && $emacsClient
#+end_src

** Idle daemon
#+begin_src conf
exec-once = wl-idle --idle 5
#+end_src

** Timer
#+begin_src conf
exec-once = timer
#+end_src

* Monitor
Currently second monitor activation needs manual config change

#+begin_src conf
monitor = HDMI-A-1, 2560x1440, 0x0, 1.25
# monitor = HDMI-A-1, 1920x1080, 0x0, 1
# monitor = eDP-1, 2560x1440, 2560x0, 1.6
monitor = eDP-1, disable
#+end_src

* Workspaces
#+begin_src conf
workspace=name:1,monitor:HDMI-A-1
workspace=name:2,monitor:HDMI-A-1
workspace=name:3,monitor:HDMI-A-1
workspace=name:4,monitor:HDMI-A-1
workspace=name:5,monitor:HDMI-A-1
workspace=name:6,monitor:eDP-1
workspace=name:7,monitor:eDP-1
workspace=name:8,monitor:eDP-1
workspace=name:9,monitor:eDP-1
workspace=name:10,monitor:eDP-1
#+end_src

* Input
#+begin_src conf
input {
    kb_variant =
    kb_model =
    kb_rules =

    follow_mouse = 0

    touchpad {
        natural_scroll = yes
        scroll_factor = 0.2
	disable_while_typing = false
    }
    kb_layout = us,ru
    kb_options = grp:alt_shift_toggle

    sensitivity = 0 # -1.0 - 1.0, 0 means no modification.

    follow_mouse = 1
    mouse_refocus = false #<-- add this

}
#+end_src

* Xwayland
#+begin_src conf
xwayland {
  force_zero_scaling = true
}
#+end_src

* General
#+begin_src conf
general {
    cursor_inactive_timeout = 1
    gaps_in = 5
    gaps_out = 5
    border_size = 2
    col.active_border = rgb(A6D189)
    col.inactive_border = rgb(292c3d)
    layout = dwindle
}
#+end_src

* Decoration
#+begin_src conf
decoration {
rounding = 5

drop_shadow = no
shadow_range = 0
shadow_render_power = 0
col.shadow = rgba(181926f2)

blur {
enabled = true
size = 8
noise = 0.05
passes = 3
}
}
#+end_src

* Animations
#+begin_src conf
animations {
    enabled = yes
    # Animation curves

    bezier = md3_standard, 0.2, 0.0, 0, 1.0
    bezier = md3_decel, 0.05, 0.7, 0.1, 1
    bezier = md3_accel, 0.3, 0, 0.8, 0.15
    bezier = overshot, 0.05, 0.9, 0.1, 1.05
    bezier = hyprnostretch, 0.05, 0.9, 0.1, 1.0
    bezier = win11, 0, 1, 0, 1
    bezier = gnome, 0, 0.85, 0.3, 1
    bezier = funky, 0.46, 0.35, -0.2, 1.2
    bezier = linear, 1, 1, 0, 0

    # Animation configs
    animation = windows, 1, 3, funky
    animation = border, 1, 10, default
    animation = fade, 1, 4, default
    animation = workspaces, 1, 2, overshot
}
#+end_src

* Dwindle
#+begin_src conf
dwindle {
    # force split :0 -> split follows mouse, 1 -> always split to the left (new
    # = left or top) 2 -> always split to the right (new = right or bottom)
    force_split = 2
    no_gaps_when_only = true
}
#+end_src

* Master
#+begin_src conf
master {
    # See https://wiki.hyprland.org/Configuring/Master-Layout/ for more
    new_is_master = true
    orientation = right
    no_gaps_when_only = -1
}
#+end_src

* Gestures
#+begin_src conf
gestures {
    # See https://wiki.hyprland.org/Configuring/Variables/ for more
    workspace_swipe = true
    workspace_swipe_fingers = 4
    workspace_swipe_cancel_ratio = 0.2
    workspace_swipe_min_speed_to_force = 5
    workspace_swipe_create_new = true
}
#+end_src

* Mouse
#+begin_src conf
device:epic-mouse-v1 {
    sensitivity = -0.5
}
#+end_src

* Debug
#+begin_src conf
debug {
	overlay = false
}
#+end_src

* Misc
#+begin_src conf
misc {
	disable_hyprland_logo = true
	disable_splash_rendering = true
	background_color = 0x000
	focus_on_activate = true
}
#+end_src

* Window rules
#+begin_src conf
windowrule = workspace 10 silent, title:(.*is sharing your screen.)
windowrule = float,^(pavucontrol)$
# windowrule = float, ^(.*chromium.*browser.*)$
windowrule = float, title:^(emacs-run-launcher)$

windowrule = float, title:(Picture in picture)
windowrule = move 79% 79%, title:(Picture in picture)
windowrule = pin, title:(Picture in picture)
windowrule = noborder, title:(Picture in picture)

windowrule = workspace 5, ^(virt-manager)$

windowrule = float, ^(org.telegram.desktop)$
#+end_src

* Layer rules
#+begin_src conf
layerrule = blur, gtk-layer-shell
layerrule = ignorezero, gtk-layer-shell
#+end_src

* Binds
** Quit hypland
#+begin_src conf
bind = $mainShiftMod, Q, exec, hyprctl dispatch exit
#+end_src

** App launchers
#+begin_src conf
bind = $mainMod, T, exec, kitty bash -c 'tmux new -s main || tmux a'
bind = $mainMod, M, exec, wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle
bind = $mainMod, B, exec, run-chrome-profile
bind = $mainMod, SPACE, exec, fuzzel
# bind = $mainMod, SPACE, exec, emacsclient -cF "((visibility . nil))" -e "(suzu/emacs-app-launcher)"
bind = $mainShiftMod, P, exec, open-pdf
bind = $mainMod, P, exec, hyprpicker -a
bind = $mainMod, W, exec, change-wallpaper
bind = $mainShiftMod, W, exec, bash -c 'notify-send "Running Win10 VM"; virsh --connect qemu:///system start win10; virt-manager --connect qemu:///system --show-domain-console win10'
bind = $mainMod, TAB, exec, eww open --toggle powermenu
# bind = $mainShiftMod, D, exec, hyprctl dispatch workspace $(hypr-first-emtpy-workspace) && edit-img-from-clipboard
bind = $mainMode, O, exec, thunar
#+end_src

*** Emacs
#+begin_src conf
bind = $mainMod, E, submap, emacs
submap=emacs
bind = ,E, exec, emacsclient --create-frame --alternate-editor=""
bind = ,S, exec, emacsclient --create-frame --alternate-editor="" --eval '(eshell)' 
bind = ,D, exec, emacsclient --create-frame --alternate-editor="" --eval '(dired nil)'
bind = ,F, exec, emacsclient --create-frame --alternate-editor="" --eval '(elfeed)'
bind = ,V, exec, emacsclient --create-frame --alternate-editor="" --eval '(+vterm/here nil)'
bind = ,R, exec, notify-send "Killing emacs" && pkill -9 emacs && $emacsDaemon && $emacsClient
bind=,escape,submap,reset 

submap=reset
#+end_src

** Workspaces
*** Naviagete
Switch workspaces with mainMod + [0-9]

#+begin_src conf
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10
#+end_src

*** Move window to another workspace
Move active window to a workspace with mainMod + SHIFT + [0-9]

#+begin_src conf
bind = $mainShiftMod, 1, movetoworkspace, 1
bind = $mainShiftMod, 2, movetoworkspace, 2
bind = $mainShiftMod, 3, movetoworkspace, 3
bind = $mainShiftMod, 4, movetoworkspace, 4
bind = $mainShiftMod, 5, movetoworkspace, 5
bind = $mainShiftMod, 6, movetoworkspace, 6
bind = $mainShiftMod, 7, movetoworkspace, 7
bind = $mainShiftMod, 8, movetoworkspace, 8
bind = $mainShiftMod, 9, movetoworkspace, 9
bind = $mainShiftMod, 0, movetoworkspace, 10
#+end_src

*** First empty workspace
#+begin_src conf
bind = $mainMod, C, exec, hyprctl dispatch workspace $(hypr-first-empty-workspace)
bind = $mainShiftMod, C, exec, hyprctl dispatch movetoworkspace $(hypr-first-empty-workspace)
#+end_src

** Windows
*** Navigate
#+begin_src conf
bind = $mainMod, h, movefocus, l
bind = $mainMod, j, movefocus, d
bind = $mainMod, k, movefocus, u
bind = $mainMod, l, movefocus, r
#+end_src

*** Move
Move window with mainShiftMod + hjkl

#+begin_src conf
bind = $mainShiftMod, h, movewindow, l
bind = $mainShiftMod, j, movewindow, d
bind = $mainShiftMod, k, movewindow, u
bind = $mainShiftMod, l, movewindow, r
#+end_src

*** Size
Change window size with atlMod + hjkl

#+begin_src conf
bind = $mainMod ALT, h, resizeactive, -20 0
bind = $mainMod ALT, j, resizeactive, 0 20
bind = $mainMod ALT, k, resizeactive, 0 -20
bind = $mainMod ALT, l, resizeactive, 20 0
bind = $mainMod, F, fullscreen
#+end_src

*** Quit window
#+begin_src conf
bind = $mainMod, Q, killactive,
#+end_src

*** Mouse support
Move/resize windows with mainMod + LMB/RMB and dragging

#+begin_src conf
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow
#+end_src

*** Groups
#+begin_src conf
bind=ALT,T,togglegroup,
bind=ALT,L,changegroupactive,f
bind=ALT,H,changegroupactive,b
bind=ALT,S,togglesplit,
#+end_src

*** Layout
#+begin_src conf
bind = $mainMod, V, togglefloating,
bind = $mainMod, U, pseudo,
bind = $mainMod, D, togglesplit,
#+end_src

** Screenshot
#+begin_src conf
# Screenshot a window
bind = $mainMod, PRINT, exec, hyprshot -m window -o "$HOME/Pictures/Screenshots"
# Screenshot a monitor
bind = , PRINT, exec, hyprshot -m output -o "$HOME/Pictures/Screenshots"
# Screenshot a region
bind = $mainShiftMod, PRINT, exec, hyprshot -m region -o "$HOME/Pictures/Screenshots"
#+end_src

** Audio
#+begin_src conf
binde=, XF86AudioRaiseVolume, exec, ~/.config/eww/scripts/volume +
binde=, XF86AudioLowerVolume, exec, ~/.config/eww/scripts/volume -
bindl=, XF86AudioMute, exec, ~/.config/eww/scripts/volume mute
bindl=, XF86AudioMicMute, exec, wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle

bind =, XF86AudioNext, exec, playerctl next
bind =, XF86AudioPrev, exec, playerctl previous
bind =, XF86AudioPlay, exec, playerctl play-pause
bind =, XF86AudioPause, exec, playerctl play-pause
#+end_src

** Brightness
#+begin_src conf
binde=, XF86MonBrightnessUp, exec, brightnessctl set 2%+
binde=, XF86MonBrightnessDown, exec, brightnessctl set 2%-
#+end_src

** Second monitor
#+begin_src conf
bind = $mainShiftMod, D, exec, toggle-second-monitor
#+end_src

** Timer
#+begin_src conf
bind =, XF86Tools, exec, bash -c 'port=$(cat /tmp/timer-port); curl "http://localhost:$port/start?minutes=52&color=red"'
bind =, XF86Launch5, exec, bash -c 'port=$(cat /tmp/timer-port); curl "http://localhost:$port/start?minutes=17&color=green"'
bind =, XF86Launch6, exec, bash -c 'port=$(cat /tmp/timer-port); curl "http://localhost:$port/stop"'
#+end_src

